name: Trigger auto deployment for patient

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: [main]
    paths:
      - "DockerFile/**"
      - ".github/workflows/workflow.yml"

  # Allow mannually trigger
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    if: |
      contains(github.event.head_commit.message, '[tag:patch]')
      || contains(github.event.head_commit.message, '[tag:minor]')
      || contains(github.event.head_commit.message, '[tag:major]')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.PATIENT_REGISTRY_USERNAME }}
          password: ${{ secrets.PATIENT_REGISTRY_PASSWORD }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            BUF_USER=${{ secrets.BUF_USER }}
            BUF_PAT=${{ secrets.BUF_PAT }}
            GH_USER=${{ secrets.GH_USER }}
            GH_PAT=${{ secrets.GH_PAT }}
            GH_ORG=${{ github.repository_owner }}
          push: true
          tags: github.com/patient:${{ github.sha }}
          file: ./DockerFile
          
      - name: Create release
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ steps.version.outputs.version_tag }}"
            })

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.PATIENT_AZURE_CREDENTIALS }}

      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n patient -g Dev --server github.com --username  ${{ secrets.PATIENT_REGISTRY_USERNAME }} --password ${{ secrets.PATIENT_REGISTRY_PASSWORD }}
            az containerapp update -n patient -g Dev --image github.com/patient:${{ github.sha }}
